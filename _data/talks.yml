-
  speaker_id:
    - valerio-barbera
  title: Come ho sviluppato e scalato un prodotto SaaS grazie a Laravel
  extract: >
    In questo talk mostrerò tutte le strategie di sviluppo che ho utilizzato per implementare e scalare un prodotto
    SaaS utilizzando Laravel per la gestione di grandi quantità di traffico. Partendo dall'evoluzione del codice
    vedremo come ho configurato l'ambiente di sviluppo, l'integrazione con sistemi esterni attraverso i driver, l'uso
    massivo del sistema Queue/Jobs e l'impatto sul Database, fino alla parte più infrastrutturale con la suddivisione
    dell'applicazione su più server specializzati e il deploy.
-
  speaker_id:
    - alessandro-cappellozza
  title: "LiveWire Hands-on, frontend moderno senza toccare una riga di javascript"
  extract: >
    Sappiamo tutti che per avere un frontend al passo coi tempi è necessario fare spesso due progetti uno di frontend e
    uno backend distinti e specializzati,complicando sia lo sviluppo che il deploy delle applicazioni.
    Questo nuovo strumento si prefigge di colmare questo gap consentendo di creare componenti "ajax" con il solo PHP;
    una strada già battuta da altri linguaggi ma con un approccio nuovo già usato da grossi portali, qui lo vedremo
    pacchettizzato e standardizzato per Laravel.
    Analizzeremo il principio di funzionamento, cosa mette a disposizione di base, un esempio pratico e dei contesti
    dove può effettivamente essere utile.
-
  speaker_id:
    - antonello-dippolito
  title: How can I trust my test suite?
  extract: >
    You just started working on a new project. Or maybe you've been working on it since some time, and it evolved a lot,
    thanks to many different developers. This means that you probably don't have enough knowledge on how the automated
    tests are written, and how effective they are.
    So, how can you be confident to ship new features in production, or to refactor that old piece of software that's
    slowing you down? Are you fairly sure that if your CI build is green you're not gonna break anything?
    There are a lot of tools out there that give you some numbers about your code and your tests, like code coverage
    and CRAP metrics, but they are significant up to some extent.
    In this talk, we will see how can you measure the effectiveness of your test suite, how you can actually improve it,
    and what are the benefits of having a reliable and comprehensive set of automated tests.
-
  speaker_id:
    - roberto-gallea
  title: Applicazioni "Modulitiche"
  extract: >
    In certi contesti un'applicazione non si presta ad essere racchiusa in un unico pacchetto monolitico, ma non è
    nemmeno sufficientemente distribuita da essere realizzata mediante un'architettura a servizi. Il paradigma “modulitico”
    è una soluzione ibrida intermedia fra questi due estremi. Questo approccio, oltre a risolvere problemi di gestione
    del progetto, richiede l'osservanza e l'applicazione di alcuni concetti fondamentali di Clean code and architecture,
    elevando il livello di qualità della codebase. Scopriremo quando e perché questa metodologia è uno strumento
    potente se usato in modo corretto.
-
  speaker_id:
    - teo-miscia
  title: Multi-tenancy in Laravel
  extract: >
    Il multi-tenancy è la principale modalità per creare delle SaaS. Analizzeremo cos'è, i pacchetti più noti e creeremo
    un applicativo di test utilizzando il pacchetto "stancl/tenancy".
-
  speaker_id:
    - leonardo-rossi
  title: Laravel Authentication Deep Dive
  extract: >
    Facciamo un tuffo nel sistema di autenticazione utenti di Laravel: vedremo nel dettaglio cosa sono le Guard e gli
    UserProvider, analizzeremo sessioni e token e useremo queste informazioni per creare il nostro sistema di
    autenticazione
-
  speaker_id:
    - riccardo-scasseddu
  title: Organizzazione del codice su Laravel
  extract: >
    In questo talk andremo a vedere le tecniche che il team di Playmoove utilizza per tenere organizzata e accessibile
    la codebase, nello specifico:
    - Scrittura di API controller
    - Business logic isolation
    - Dependency injection
    - Generazione automagica delle API docs
